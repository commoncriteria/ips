<Module xmlns="https://niap-ccevs.org/cc/v1" xmlns:sec="https://niap-ccevs.org/cc/v1/section" xmlns:h="http://www.w3.org/1999/xhtml" boilerplate="yes" target-product="IPS" target-products="IPSes" name="Intrusion Prevention System (IPS)">

<!--    <cPP/>    -->                                 <!-- This empty element must be included here if this is a cPP. It must not be here if it is not.  -->

<!-- for FP -->
<!--
<Package name="TLS"                                   
    xmlns="https://niap-ccevs.org/cc/v1"
    xmlns:h="http://www.w3.org/1999/xhtml"
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"
-->

<!-- For a PP-Module 
<Module
    name="Widget Clients"                              # Name of the Module  
    xmlns="https://niap-ccevs.org/cc/v1"               # Some html magic
    xmlns:h="http://www.w3.org/1999/xhtml"             # uses the "h" namespace for inline HTML
    xmlns:sec="https://niap-ccevs.org/cc/v1/section"   # The "sec" namespace for sections is available
    target-product="Widget"                            # Name of the TOE product
    target-products="Widgets"                          # Plural name of the TOE product (optional)
    boilerplate="yes"                                  # Whether to use boilerplate text by default (can be disabled in sections)
    short="Wid">                                       # A short name for the PP (e.g. App or MDF)
-->

  <!-- PPReference (all documents) -->
  <PPReference>
    <ReferenceTable>
      <PPVersion>1.1</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2025-03-21</PPPubDate>
      <Keywords>IPS</Keywords>
    </ReferenceTable>
  </PPReference>

<!-- Revision History (all documents) -->
  <RevisionHistory>
    <entry>
      <version>1.1</version>
      <date>2025-03-21</date>
      <subject>CC:2022 updates, incorporation of TDs</subject>
    </entry>
    <entry>
      <version>1.0</version>
      <date>2021-05-11</date>
      <subject>Initial publication</subject>
    </entry>
  </RevisionHistory>

  <release-notes><h:h3>TDs Applied</h:h3></release-notes><include-pkg id="pkg-ssh">
    <git>
      <url>https://github.com/commoncriteria/ssh</url>
      <branch>master</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/515</url>
    
  </include-pkg>
  <include-pkg id="pkg-tls">
    <git>
      <url>https://github.com/commoncriteria/tls</url>
      <branch>release-2.0</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/465</url>
    <depends on="fcs-eap-ext-1"/>
  </include-pkg>
  <include-pkg id="pkg-x509">
    <git>
      <url>https://github.com/commoncriteria/X509</url>
      <branch>master</branch>
    </git>
    <url>https://www.niap-ccevs.org/protectionprofiles/511</url>
  </include-pkg>



  <!-- Introduction (all documents) -->
  <sec:Introduction>
    
    <!-- 1.1 Overview --> <!-- change -->
    <sec:Overview>
      The scope of this PP-Module is to describe the security functionality of an Intrusion Prevention System
      (IPS) in terms of <xref g="CC"/> and to define functional and assurance requirements for such products. This PP-Module is intended for use with the following Base-PPs:
      
      <h:ul>
        <h:li>collaborative Protection Profile for Network Devices, Version 3.0E (NDcPP or CPP_ND_V3.0E)</h:li>
      </h:ul>
      
      <h:p>
      This Base-PP is valid because a device that implements IPS is a specific type of network device, and there is nothing about the implementation of IPS that would prevent any of the security capabilities defined by the Base-PP from being satisfied.
      </h:p><h:p>
      A TOE that conforms to a PP-Configuration containing this PP-Module may be a ‘Distributed TOE’ as defined in the NDcPP. For example, the TOE could have distributed ‘sensor’ components monitoring various logically separated networks, each of which reports to a centralized ‘manager’ component for
      configuration of IPS policies and aggregation of IPS data.
      </h:p>
    </sec:Overview>

	
	<!-- CC and Tech terms.  -->
	<!-- CC terms are auto-generated -->
	<!-- All tech terms are generated from the list below. -->
	<!-- You should add and delete tech terms as required by the technology type. -->
	<tech-terms>
	  <!-- To remove an irrlevant CC term from the document, use the <suppress> element -->
      <suppress>Distributed TOE</suppress>   

      <term abbr="AES" full="Advanced Encryption Standard"/>
      <term abbr="API" full="Application Programming Interface"/>
      <term full="Address Space Layout Randomization" abbr="ASLR">
		An anti-exploitation feature which loads memory mappings into unpredictable
		locations. ASLR makes it more difficult for an attacker to redirect control to code
		that they have introduced into the address space of a process.
      </term>
      <term full="Administrator">
		An administrator is responsible for management activities, including setting policies that are 
		applied by the enterprise on the operating system.
		This administrator could be acting remotely through a management server, from which the system
		receives configuration policies.
		An administrator can enforce settings on the system which cannot be overridden by non-administrator users.
      </term>
      <term full="Application" abbr="app">
		Software that runs on a platform and performs tasks on behalf of the user
		or owner of the platform, as well as its supporting documentation. 
      </term>
      <term full="Application Programming Interface" abbr="API">
		A specification of routines, data structures, object classes, and variables
		that allows an application to make use of services provided by another software
		component, such as a library. APIs are often provided for a set of libraries included
		with the platform.
      </term>
      <term abbr="CESG" full="Communications-Electronics Security Group"/>
      <term abbr="CMC" full="Certificate Management over CMS"/>
      <term abbr="CMS" full="Cryptographic Message Syntax"/>
      <term abbr="CN" full="Common Names"/>
      <term full="Credential">
		Data that establishes the identity of a user, e.g. a cryptographic key or
		password.
      </term>
      <term abbr="CRL" full="Certificate Revocation List"/>
      <term abbr="CSA" full="Computer Security Act"/>
      <term full="Critical Security Parameters" abbr="CSP">
		Information that is either user or system defined and
		is used to operate a cryptographic module in processing encryption functions including
		cryptographic keys and authentication data, such as passwords, the disclosure or modification
		of which can compromise the security of a cryptographic module or the security of the
		information protected by the module.
      </term>
      <term full="Data At Rest" abbr="DAR"/>
      <term full="DAR Protection">
		Countermeasures that prevent attackers, even those with physical access,
		from extracting data from non-volatile storage.
		Common techniques include data encryption and wiping.
      </term>
      <term full="Data Execution Prevention" abbr="DEP">
		An anti-exploitation feature of modern operating systems executing on
		modern computer hardware, which enforces a non-execute permission on pages of memory.
		DEP prevents pages of memory from containing both data and instructions, which makes
		it more difficult for an attacker to introduce and execute code.
      </term>
      <term abbr="DES" full="Data Encryption Standard"/>
      <term full="Developer">
		An entity that writes OS software. For the purposes of this document,
		vendors and developers are the same.
      </term>
      <term full="General Purpose Operating System">
		A class of OSes designed to support a wide-variety of workloads consisting of many concurrent applications or services.
		Typical characteristics for OSes in this class include support for third-party applications,
		support for multiple users, and security separation between users and their respective resources.
		General Purpose Operating Systems also lack the real-time constraint that defines Real Time Operating Systems (RTOS).
		RTOSes typically power routers, switches, and embedded devices.
      </term>
      <term abbr="DHE" full="Diffie-Hellman Ephemeral"/>
      <term abbr="DNS" full="Domain Name System"/>
      <term abbr="DRBG" full="Deterministic Random Bit Generator"/>
      <term abbr="DSS" full="Digital Signature Standard"/>
      <term abbr="DT" full="Date/Time Vector"/>
      <term abbr="DTLS" full="Datagram Transport Layer Security"/>
      <term abbr="EAP" full="Extensible Authentication Protocol"/>
      <term abbr="ECDHE" full="Elliptic Curve Diffie-Hellman Ephemeral"/>
      <term abbr="ECDSA" full="Elliptic Curve Digital Signature Algorithm"/>
      <term abbr="EST" full="Enrollment over Secure Transport"/>
      <term abbr="FIPS" full="Federal Information Processing Standards"/>
      <term abbr="HMAC" full="Hash-based Message Authentication Code"/>
      <term full="Host-based Firewall">
		A software-based firewall implementation running on the OS for filtering inbound and
		outbound network traffic to and from processes running on the OS.
      </term>
      <term abbr="HTTP" full="Hypertext Transfer Protocol"/>
      <term abbr="HTTPS" full="Hypertext Transfer Protocol Secure"/>
      <term abbr="DSS" full="Digital Signature Standard"/>
      <term abbr="IETF" full="Internet Engineering Task Force"/>
      <term abbr="IP" full="Internet Protocol"/>
      <term abbr="ISO" full="International Organization for Standardization"/>
      <term abbr="IT" full="Information Technology"/>
      <term abbr="ITSEF" full="Information Technology Security Evaluation Facility"/>
      <term abbr="NIAP" full="National Information Assurance Partnership"/>
      <term abbr="NIST" full="National Institute of Standards and Technology"/>
      <term abbr="OCSP" full="Online Certificate Status Protocol"/>
      <term abbr="OID" full="Object Identifier"/>
      <term abbr="OMB" full="Office of Management and Budget"/>
      <term full="Operating System" abbr="OS" plural="OSes">
		Software that manages physical and logical resources and provides services
		for applications. The terms <h:i>TOE</h:i> and <h:i>OS</h:i> are interchangeable in this
		document. 
      </term>
      <term abbr="PKI" full="Public Key Infrastructure"/>
      <term abbr="PP" full="Protection Profile"/>
      <term abbr="RBG" full="Random Bit Generator"/>
      <term abbr="RFC" full="Request for Comment"/>
      <term abbr="RNG" full="Random Number Generator"/>
      <term abbr="RNGVS" full="Random Number Generator Validation System"/>
      <term full="Personally Identifiable Information" abbr="PII">
		Any information about an individual maintained by an agency, including, but
		not limited to, education, financial transactions, medical history, and criminal or
		employment history and information which can be used to distinguish or trace an
		individual's identity, such as their name, social security number, date and place of
		birth, mother's maiden name, biometric records, etc., including any other personal
		information which is linked or linkable to an individual.<xref to="bibOMB"/>
      </term>
      <term abbr="SAN" full="Subject Alternative Name"/>
      <term abbr="SHA" full="Secure Hash Algorithm"/>
      <term abbr="S/MIME" full="Secure/Multi-purpose Internet Mail Extensions"/>
      <term full="Sensitive Data">
		Sensitive data may include all user or enterprise data or may be specific
		application data such as PII, emails, messaging, documents, calendar items, and contacts.
		Sensitive data must minimally include credentials and keys. Sensitive data shall
		be identified in the OS's TSS by the ST author. 
      </term>
      <term abbr="SIP" full="Session Initiation Protocol"/>
      <term abbr="SWID" full="Software Identification"/>
      <term abbr="TLS" full="Transport Layer Security"/>
      <term abbr="URI" full="Uniform Resource Identifier"/>
      <term abbr="URL" full="Uniform Resource Locator"/>
      <term abbr="USB" full="Universal Serial Bus"/>
      <term full="User">
		A user is subject to configuration policies applied
		to the operating system by administrators.  On some systems under certain
		configurations, a normal user can temporarily elevate privileges to that of an administrator.
		At that time, such a user should be considered an administrator.
      </term>
	  <term abbr="VM" full="Virtual Machine">Blah Blah Blah</term>
      <term abbr="XCCDF" full="eXtensible Configuration Checklist Description Format"/>
      <term abbr="XOR" full="Exclusive Or"/>
    </tech-terms>    

	<!-- Other sections can be added here. -->
	<!-- Commen examples include Scope of Document, Intended Audiance, Compliant Targets of Evaluation,
	     TOE Boundary, TOE Operational Environment, and Roles. These sections can also be included in the
		 TOE/PP Overview aove. -->
    <sec:Compliant_Targets_of_Evaluation>
      <sec:TOE_Boundary>
        <figure entity="images/Toe.png" title="General TOE " id="toe"/>
       </sec:TOE_Boundary>
    </sec:Compliant_Targets_of_Evaluation>


    <!-- 1.4 Use Cases -->
    <sec:Use_Cases>
      This PP-Module defines two potential use cases for the VPN gateway TOE, defined below. The first use
      case will always be applicable for a TOE that conforms to this PP-Module. The second use case defines an
      optional deployment for the TOE that accompanies the first use case.
      
      <usecases>
        <usecase id="usecase1" title="Network Device">
          <description>
            The VPN gateway is part of the functionality that is provided by a general network device appliance, such
            as a router or switch, or a device that is dedicated solely to providing multi-site VPN gateway
            functionality.
          </description>
        </usecase>
        
        <usecase id="usecase2" title="Remote Client Headend">
          <description>
            The VPN gateway provides the ability to act as a headend for remote clients.
          </description>
        </usecase>
      </usecases>
      
    </sec:Use_Cases> 
    
 
	

	<!-- Product Features. Required if there are implementation-dependent requirements. -->
	<!-- These are the product features that are defined in order to support implementation-dependent requirements. -->
  <!--
	<section title="Product Features Mapped to Implementation-dependent Requirements" id="sec-features">
		The feature(s) enumerated below, if implemented by the TOE, require that additional SFRs be claimed in the ST.<h:br/>
		<implements>
			<feature id="feat-test1" title="Test Feature 1">
				<description>Description of test feature one.</description>
			</feature>
			<feature id="feat-test2" title="Test Feature 2">
				<description>Description of test feature two.</description>
			</feature>
		</implements>			
	</section>   --><!-- Features -->

</sec:Introduction>   <!-- Introduction  -->


	<!-- cc-version: cc-2022r1 or cc-31r5   -->
	<!-- cc-approach: standard or direct-rationale  -->
	<!-- display: Should this info be displayed in the Conformance -->
	<!-- Claims section? If no, you have to write a free-form section -->
    <section title="Conformance Claims" id="ConformanceClaims">
      
      <!-- 2.1 CC Conformance -->
      <CClaimsInfo cc-version="cc-2022r1" cc-approach="direct-rationale">
        <cc-st-conf>exact</cc-st-conf>
        <cc-pt2-conf>extended</cc-pt2-conf>
        <cc-pt3-conf>conformant</cc-pt3-conf>
        <cc-pp-conf/>
        <cc-pp-config-with>
          <Mod-cc-ref>collaborative Protection Profile Module for Stateful Traffic Filter Firewalls v1.4 + Errata 20200625</Mod-cc-ref>
          <Mod-cc-ref>PP-Module for Intrusion Protection Systems, v1.1</Mod-cc-ref>
        </cc-pp-config-with>
        <cc-pkg-claim/>
      </CClaimsInfo>
    </section>  <!-- Conformance Claims -->
  

  
  <sec:Security_Problem_Definition>
  
    <!-- Arbitrary introductory text -->
	The security problem is described in terms of the threats that the OS is expected to address, 
	assumptions about the operational environment, and any organizational security policies that the OS
    is expected to enforce.


    <section title="Threats" id="sec-threats">
	
		<!-- If using the standard approach, each threat references one of more Objectives -->
		<!-- using the <objective-refer> tag.   -->
		<!-- If using direct rationale, each threat references the SFRs that address the threat -->
		<!-- using the <addressed-by> tag.  -->

      <threats>
        <threat name="T.NETWORK_ATTACK">
          <description> An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may engage in communications with applications and
            services running on or part of the OS with the intent of compromise. Engagement may
            consist of altering existing legitimate communications.</description>


		  <!-- For direct rationale, use the following format instead of <objective-refer> -->
<!--          <addressed-by>FPT_SBOP_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
          <addressed-by>FPT_ASLR_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
          <addressed-by>FPT_TUD_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
          <addressed-by>FPT_TUD_EXT.2</addressed-by><rationale>How the SFR addresses the threat.</rationale>
-->		  
        </threat>

        <threat name="T.NETWORK_EAVESDROP" id="t-network-eavesdrop">
          <description> An attacker is positioned on a communications channel or elsewhere on the
            network infrastructure. Attackers may monitor and gain access to data exchanged between
            applications and services that are running on or part of the OS. </description>
  
		  
<!--            <addressed-by>FCS_COP.1/HASH</addressed-by><rationale>How the SFR addresses the threat.</rationale>
            <addressed-by>FCS_COP.1/SIGN</addressed-by><rationale>How the SFR addresses the threat.</rationale>
            <addressed-by>FCS_COP.1/KEYHMAC</addressed-by><rationale>How the SFR addresses the threat.</rationale>
            <addressed-by>FPT_ACF_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
            <addressed-by>FPT_SRP_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
            <addressed-by>FIA_X509_EXT.1</addressed-by><rationale>How the SFR addresses the threat.</rationale>
-->		  
        </threat>
      </threats>
    </section>  <!-- Threats -->
	
	<!-- Assumptions refer to operational objective objectives regardless of whether -->
	<!-- the document uses standard or direct rationale. -->
	
    <sec:Assumptions>
      <assumptions>
        <assumption name="A.PLATFORM">
          <description> The OS relies upon a trustworthy computing platform for
            its execution. This underlying platform is out of scope of this PP. </description>
          <objective-refer ref="OE.PLATFORM">
            <rationale> The operational environment objective OE.PLATFORM is realized through
              A.PLATFORM. </rationale>
          </objective-refer>
        </assumption>
        <assumption name="A.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile, and uses the
            software in compliance with the applied enterprise security policy. At the same time,
            malicious software could act <h:i>as</h:i> the user, so requirements which
            confine malicious subjects are still in scope.</description>
          <objective-refer ref="OE.PROPER_USER">
            <rationale>The operational environment objective OE.PROPER_USER is realized through
              A.PROPER_USER.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>  <!-- Assumptions -->
	
	<!-- OSPs refer to Objectives or OE Objectives in standard approach documents. -->
	<!-- In direct rationale PPs, they should refer to OE Objectives -->
    <sec:Organizational_Security_Policies>
      <OSPs>
        <OSP name="P.PLACEHOLDER">
          <from base=""/>
          <objective-refer ref="OE.PLACEHOLDER">
            <rationale>placeholder</rationale>
          </objective-refer>
        </OSP>
      </OSPs>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Definition> <!-- Security Problem Definition -->
  
  
  <!-- This section is mandatory for standard approach documents.   -->
  <!-- It should be included in direct rationale documents if there are OE Objectives. -->
  <sec:Security_Objectives>  
  &gt;

	<!-- This section is included in direct rationale documents if there are OE Objectives -->
    <sec:Security_Objectives_for_the_Operational_Environment>
	  <SOEs>
        <SOE name="OE.PLATFORM">
          <description>The OS relies on being installed on trusted
            hardware.</description>
        </SOE>
        <SOE name="OE.PROPER_USER">
          <description> The user of the OS is not willfully negligent or hostile,
            and uses the software within compliance of the applied enterprise security policy.
            Standard user accounts are provisioned in accordance with the least privilege model.
            Users requiring higher levels of access should have a separate account dedicated for
            that use. </description>
        </SOE>
        <SOE name="OE.PROPER_ADMIN">
          <description> The administrator of the OS is not careless, willfully
            negligent or hostile, and administers the OS within compliance of the applied enterprise
            security policy. </description>
        </SOE>
      </SOEs>
      </sec:Security_Objectives_for_the_Operational_Environment>  <!-- OE Objectives -->

	<!-- This section is automatically generated, but this placeholder is reuired -->
    <section title="Security Objectives Rationale" id="sec-sor"/>

  </sec:Security_Objectives>  <!-- Security_Objectives  -->


  
  <sec:Security_Requirements>

    <base-pp id="ND" version="3.0e" name="Network Device" product="Network Device" short="ND" plural="Network Devices">
      <url>https://www.niap-ccevs.org/protectionprofiles/482</url>
      <cPP/>
      <sec-func-req-dir> 
        QQQQQ
      </sec-func-req-dir>
      <modified-sfrs/>
      <additional-sfrs/>
      <con-toe>
        QQQQQQ
      </con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>
      
      
      <con-mod ref=""/>
    </base-pp>
	<man-sfrs>
    

		<!-- Audit table for Mandatory SFRs -->
	  <section id="ss-audit-table" title="Auditable Events for Mandatory SFRs">
	    <audit-table table="mandatory" id="mandatory-audit-events">
	      <h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-mandatory">: Auditable Events for Mandatory SFRs</ctr></h:b>
	    </audit-table>
	  </section>

		<!-- Section for SFR Class -->
		<section title="Class: Cryptologic Support (FCS)" id="sec-fcs">
		
			<!-- If this Class does not exist in the CC, then you need the following. -->
			<!-- Try not to create new classes. -->
<!--	        <class-description>A description of the new class.</class-description>        
			<ext-comp-class class="ClassName (ClassAbbr)">
				<description>Not sure what this is for.</description>
			</ext-comp-class>
-->
	
			<!-- For each family in the class that includes one or more  extended components  -->
			<!-- you need to povide an extended component definition like this. -->
<!--	        <ext-comp-def title="Cryptographic Key Management" fam-id="FCS_CKM_EXT">
			<fam-behavior>This family defines requirements for management of cryptographic keys.
				FCS_CKM_EXT.4 is necessary because FCS_CKM.4 does not include a requirement for the timing of 
				key destruction.
				FCS_CKM_EXT.5 is necessary to express requirements for key derivation, which are missing from Part 2. 
				</fam-behavior>
			</ext-comp-def>
-->			
			<!-- Next define all the components in the Class -->
			<!-- name: Name of the requirement as it should appear in the document -->
			<!-- id: Should look something like this, but it just needs to be unique in the document -->
			<!-- cc-id" This is a lower-case version of the SFR name as it would appear in a document -->
			<!-- iteration: This attribute is required only if the SFR is an iteration -->
			<f-component name="Cryptographic Operation: Symmetric Key Cryptography" id="sfr-fcs-cop-ext-1-skc" cc-id="fcs_cop_ext.1" iteration="SKC">              
		
				<!-- Dependencies for sel-based, feat-based -->
				<depends on-sel="sel-rot2-audit"/> 
				
				<!-- Consistency rationale is required only for SFRs in modified and additional SFR -->
				<!-- sections of a PP-Module. -->
<!--				<consistency-rationale>
					This SFR defines additional uses for X.509 certificate functionality that
					do not conflict with those defined in the GPOS PP.
				</consistency-rationale>
-->				
				<!-- Extended components must provide the following information. -->
				<!-- Component leveling information for the ECD appendix. -->
				<comp-lev>
					specifies how audit data may be transmitted or removed from the TOE, which is not 
					covered by any FCS_STG component.
				</comp-lev>
				<management>
					The following actions could be considered for the management functions in FMT:
					<h:ol type="a">
						<h:li>Ability to configure and manage the audit system and audit data,
							including the ability to configure name/address of audit/logging server
							to which to send audit/logging records.
						</h:li>
					</h:ol>
				</management>
				<audit>The following actions should be auditable if FAU_GEN Security audit data generation 
					is included in the PP/ST:
					<h:ol type="a">
						<h:li>On failure of logging function, capture record of failure and record upon 
							restart of logging function.
						</h:li>
					</h:ol>
				</audit>
				<dependencies><h:br/>
					FAU_GEN.1 Audit Data Generation
				</dependencies>
				
				<!-- Optional description that is seldon used. -->
<!--				<description>
					This is something that I want to say up front about this requirement, but I 
					don't have to. Most people use App Notes for this.
				</description>
-->
				<!-- Elements for this component. One or more. -->
				<f-element id="fcs-cop-ext-1-1-skc">
					<title>
						The TSF shall be able to transfer generated audit data to an external IT entity
						using 
						<selectables linebreak="yes">
							<selectable id="sel-fau-itc">a trusted channel as specified in FTP_ITC_EXT.1</selectable>
							<selectable>removable media requiring physical access to the platform</selectable>
						</selectables>.
					</title>
					
					<!-- For extended components only that include selections or assignments with an id attribute -->
					<!-- Make a copy of the title with all selections replaced by assignments and all ids removed.-->
					<!-- This ensures proper display in the ECD section. -->
					<ext-comp-def-title>
						<title>The TSF shall be able to transfer generated audit data to an external IT entity using 
							<assignable>mechanism for moving audit data</assignable>. 
						</title>
					</ext-comp-def-title>
					
					<note role="application">
						Instructions for the ST Author on how to fill in the selections and assignments.
					</note>
					
					<!-- EAs for the element (or component) -->
					<aactivity level="element">
						<TSS>What the evaluator has to do with the TSS.</TSS>
						<Guidance>What the evaluator has to do with the TOE Guidance document.</Guidance>
						<KMD>What the evaluator has to do with the Key Management Document, or whatever.</KMD>
						<Tests>The tests that the evaluator has to run to verify that the requirement is met.</Tests>
					</aactivity>
					
					<!-- Optional rules go here. -->
<!--					<rule id="keyedhash-alg-match-sha-256">
						<description>If "<h:i><xref to="sel-hmac-sha-256"/></h:i>" is selected in FCS_COP.1/KeyedHash then "<h:i><xref to="sel-hash-sha-256"/></h:i>" 
							must be selected in FCS_COP.1/Hash.</description>
						<if><ref-id>sel-hmac-sha-256</ref-id></if><then><ref-id>sel-hash-sha-256</ref-id></then>
					</rule>
-->
				</f-element>

				<!-- Audit events for this SFR -->
				<audit-event>
					<audit-event-descr>Failure to establish a HTTPS Session.</audit-event-descr>
					<audit-event-info>Reason for failure.</audit-event-info>
					<audit-event-info>Non-TOE endpoint of connection (IP address) for failures.</audit-event-info>
				</audit-event>
				
			</f-component>	
	
			<!-- We're pretending that this one is from the CC catalog -->
			<f-component name="Yet Another Requirement" id="sfr-fcs-yar-1" cc-id="fcs_yar.1">              
		
				<!-- Elements for this component. One or more. -->
				<f-element id="fcs-yar-1e1">
					<title>
						The TSF shall be able to do something important.
					</title>
					
					<note role="application">
						Instructions for the ST Author on how to fill in the selections and assignments.
					</note>
					
					<!-- EAs for the element (or component) -->
					<aactivity level="element">
						<TSS>What the evaluator has to do with the TSS.</TSS>
						<Guidance>What the evaluator has to do with the TOE Guidance document.</Guidance>
						<KMD>What the evaluator has to do with the Key Management Document, or whatever.</KMD>
						<Tests>The tests that the evaluator has to run to verify that the requirement is met.</Tests>
					</aactivity>
					
				</f-element>

				<!-- Audit events for this SFR -->
				<audit-event>
					<audit-event-descr>Failure to do the important thing.</audit-event-descr>
					<audit-event-info>Reason for failure.</audit-event-info>
				</audit-event>
				
			</f-component>	
	
			<!-- More components and class sections. -->

		</section> <!-- Class FCS -->
		
		<!-- Security Requirements Rationale section -->
		<!-- This is auto-genertaed and appears here. -->
		
	</man-sfrs>  <!-- SFRs -->
    
    <opt-sfrs/>
    <sel-sfrs/>
    <obj-sfrs/>
    <impl-dep-sfrs/>
	


    </sec:Security_Requirements> <!-- Security Requirements  -->

<?modules <!-- Security Reuirements Section for Modules -->
	<section title="Security Requirements" id="sec-reqs">

		<!-- Requirements for Each Base PP -->
		<base-pp id="bpp-mdf"                                            <!-- unique ID within this document -->
             name="Protection Profile for Mobile Device Fundamentals"    <!-- Full name of Base PP  -->
             short="mdf"                                                 <!-- short name of Base PP  -->
             product="Mobile Device"                                     <!-- Base PP Product -->
             version="3.3">                                              <!-- Base PP version  -->

			<!-- Reference to Github repo of Base PP. -->
			<!-- If there is none, then this is omitted -->
			<git>
				<url>https://github.com/commoncriteria/mobile-device</url>       <!-- URL of base PP github repo --> 
				<branch>release-3.3</branch>                                     <!-- Github branch of release version  -->
			</git>

			<!-- URL of Base PP on the NIAP website  -->
			<url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=417&amp;id=417</url>

			<!-- Security Functional Requirements Direction -->
			<sec-func-req-dir>
				In a PP-Configuration that includes the MDF PP, the VPN client is expected to rely on some of the
				security functions implemented by the OS as a whole and evaluated against the Base-PP.
				In this case, the following sections describe any modifications that the ST author must make to the SFRs
				defined in the Base-PP in addition to what is mandated by section 5.5.
			</sec-func-req-dir>

			<!-- Requirements in the base PP that are modified by the Module -->
			<modified-sfrs>
				<section title="Identification and Authentication (FIA)" id="md-m-fia">    
					<!-- Modified SFRs from the FIA Family  -->
				</section>
				<section title="Security Management (FMT)" id="md-m-fmt">    
					<!-- Modified SFRs from the FMT Family   -->
				</section>
				<!-- etc. -->
			</modified-sfrs>
			
			<!-- SFRs that the Module adds to the base PP -->
			<additional-sfrs>
				<!-- Audit table for Additional SFRs -->
				<section id="sec-at-os-addnl" title="Auditable Events for GPOS Additional SFRs">
					<audit-table id="at-os-addnl" table="tab-at-os-addnl" title="Auditable Events for GPOS Additional SFRs"/>
				</section>	

				<section title="Cryptographic Support (FCS)" id="os-a-fcs">
					<ext-comp-def title="Cryptographic Key Management" fam-id="FCS_CKM_EXT">
					<fam-behavior>Components in this family describe requirements for key management functionality such as key
						storage and destruction.</fam-behavior>
					</ext-comp-def>
					<!-- Additional SFRs from the FCS Family (apparently at least one is EXT) -->
				</section>

				<section title="Security Management (FMT)" id="os-m-fmt">    
					<!-- Additional SFRs from the FMT Family  -->
				</section>
            	<!-- etc. -->
			</additional-sfrs>
			
			<!-- Consistency Rationale information for the base PP -->
			<!-- Consistency of TOE type -->
			<con-toe>
				If this PP-Module is used to extend the MDF PP, the TOE type for the overall TOE is still a mobile device.
				The TOE boundary is simply extended to include VPN client functionality that is built in to the device’s
				software so that additional security functionality is claimed within the scope of the TOE.  
			</con-toe>
			
			<!-- Consistency of Security Problem Definition -->
			<con-sec-prob>
				The threats and assumptions defined by this PP-Module (see sections 3.1 and 3.2) supplement
				those defined in the MDF PP as follows: 
			</con-sec-prob>
			
			<!-- Consistency of Objectives -->
			<!-- Introductory text for the consistency of objective table. -->
			<!-- This may be omitted for direct rational modules. If included it is ignored. -->
			<con-obj>
				The security objectives defined by this PP-Module (see sections 4.1 and 4.2) supplement 
				those defined in the MDF PP as follows:
			</con-obj>
			
			<!-- Consistency of Operational Environment Objectives -->
			<!-- This tag provides introductory text for the Consistency of OE objectives table. -->
			<!-- It can be left empty. -->
			<con-op-en></con-op-en>
			
			<!-- Consistency of Security Problem Description -->
			<!-- Rationales for threats and assumptions -->
			<con-mod ref="T.UNAUTHORIZED_ACCESS">The threat of an attacker gaining access to a network interface or data
				that is transmitted over it is consistent with the T.NETWORK and T.EAVESDROP threats in the MDF PP.
			</con-mod>
			<con-mod ref="A.TRUSTED_CONFIG">This assumption is consistent with the MDF PP because the MDF PP
				includes the A.CONFIG assumption which assumes that all security functions are appropriately configured.
			</con-mod>
			
			<!-- Consistency of Objectives -->
			<!-- In Direct Rationale modules, the Objective rationale are omitted -->
			<con-mod ref="O.KNOWN_STATE">This objective is consistent with the O.INTEGRITY objective of the
				MDF PP, which expects a conformant TOE to implement measures to maintain its own integrity.
			</con-mod>
			<con-mod ref="OE.NO_TOE_BYPASS">This objective addresses behavior that is out of scope of the MDF PP
				and does not define an environment that an MDF TOE is incapable of existing in.
			</con-mod>
			
			<!-- Consistency of Requirements -->
			<con-mod ref="md-fcs-ckm-1">The ST author is instructed to make specific selections at minimum to
				address VPN client requirements; the SFR behavior itself is unmodified.
			</con-mod>
			<con-mod ref="fcs-ipsec-ext-1">This SFR defines the VPN client’s IPsec implementation, which is added
				functionality that does not interfere with the MDF functions.
			</con-mod>
			<con-mod ref="fdp-rip-2">The requirement to protect against re-use of residual data is a property of
				the VPN client behavior and does not impact the MDF functionality.
			</con-mod>
			
		</base-pp>  
		
		<!-- etc. for all the base PPs -->
		
		<!-- After all the Base PP requirements come the Moduyle's own Requirements -->
		<!-- TOE Security Functional Requirements -->
		<!-- The order is weird. -->
		
		<!-- Mandatory SFRs -->
		<man-sfrs>
		
			<!-- Audit table for mandatory SFRs -->
			<section id="ss-audit-table" title="Auditable Events for Mandatory SFRs">
				<audit-table id="at-mandatory" table="mandatory">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-mandatory">: Auditable Events for Mandatory SFRs</ctr></h:b>
				</audit-table>
			</section>

			<!-- Mandatory SFRs. Classes and ECD information is required. -->
		
		</man-sfrs>

		<!-- SARs added by the Module. This is rare. -->
		<mod-sars>
			<!-- SARS added by the module. If none, this tag may be omitted. --> 
		</mod-sars>
		
		<!-- Optional SFRs -->
		<opt-sfrs>
			
			<!-- Audit table for optional SFRs -->
		    <section id="sop-audit-table" title="Auditable Events for Strictly Optional SFRs">
				<audit-table id="at-optional" table="optional">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-optional">: Auditable Events for Strictly Optional SFRs</ctr></h:b>
				</audit-table>
			</section>
			
			<!-- Optional SFRs. Classes and ECD information is required. -->
		
		</opt-sfrs>
		

		<!-- Selection-based SFRs -->
		<sel-sfrs>
			<section id="sb-audit-table" title="Auditable Events for Selection-based SFRs">
				<audit-table id="at-selbased" table="sel-based">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-sel-based">: Auditable Events for Selection-based SFRs</ctr></h:b>
				</audit-table>
			</section>

			<!-- Selection-based SFRs. Classes and ECD information is required. -->
		
		</sel-sfrs>

		<!-- Objective SFRs. This tag may be omitted if there are none. -->
		<obj-sfrs>
		
			<!-- Audit table for objective SFRs -->
		    <section id="sobj-audit-table" title="Auditable Events for Objective SFRs">
				<audit-table id="at-objective" table="objective">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-objective">: Auditable Events for Objective SFRs</ctr></h:b>
				</audit-table>
			</section>
			
			<!-- Objective SFRs. Classes and ECD information is required. -->
		</obj-sfrs>

		
		<!-- Implementation-dependent SFRs -->
		<impl-dep-sfrs>
			
			<section id="sib-audit-table" title="Auditable Events for Implementation-Dependent SFRs">
				<audit-table id="at-feat-based" table="feat-based">
					<h:br/><h:b><ctr ctr-type="Table" pre="Table " id="atref-implbased">: Auditable Events for Implementation-Dependent SFRs</ctr></h:b>
				</audit-table>
			</section>
		
			<!-- implementation-dependent SFRs, etc. -->
		
		</impl-dep-sfrs>
		
	</section>   <!-- Security Requirements -->
?>





  <!-- 
		The following sections are auto generated from the SFRs in the SFR section.
		Appendix A: Optional Requirements 
			A.1: Strictly Optional Requirements
			A.2: Objective requirements
			A.3: Implementation-dependent SFRs
		Appendix B: Selection-based requirements
		Appendix C: Extended Component Definitions (if any)
  -->


	<!-- This should be included if there are SFRs that are dependencies for included SFRs, 
	     but the dependencies are not incluuded in the PP. -->
	<appendix title="Inherently Satisfied Requirements" id="satisfiedreqs"> 
		This appendix lists requirements that should be considered satisfied by products
		successfully evaluated against this Protection Profile.  
		However, these requirements are not featured explicitly as SFRs and should not be
		included in the ST.  
		They are not included as standalone SFRs because it would
		increase the time, cost, and complexity of evaluation.  This approach is permitted
		by <xref g="CC"/> Part 1, <h:b>8.2 Dependencies between components</h:b>.
		<h:br/>
		This information benefits systems engineering activities which call for inclusion of 
		particular security controls.  Evaluation against the Protection Profile
		provides evidence that these controls are present and have been evaluated.
		<table xmlns="http://www.w3.org/1999/xhtml">
			<tr class="header">
				<td>Requirement</td>
				<td>Rationale for Satisfaction</td>
			</tr>
			<tr>
				<td>FIA_UAU.1 - Timing of authentication</td>
				<td>
				  FIA_AFL.1 implicitly requires that the OS perform all necessary actions, 
				  including those on behalf of the user who has not been authenticated, 
				  in order to authenticate;
				  therefore it is duplicative to include these actions as a 
				  separate assignment and test.
				</td>
			</tr>
			<tr>
				<td>FIA_UID.1 - Timing of identification</td>
				<td>
				  FIA_AFL.1 implicitly requires that the OS perform all necessary actions, 
				  including those on behalf of the user who has not been identified, 
				  in order to authenticate;
				  therefore it is duplicative to include these actions as a 
				  separate assignment and test.
				</td>
			</tr>
			<tr>
				<td>FMT_SMR.1 - Security roles</td>
				<td>
				  FMT_MOF_EXT.1 specifies role-based management functions that implicitly defines
				  user and privileged accounts; 
				  therefore, it is duplicative to include separate role requirements.
				</td>
			</tr>
			<tr>
				<td>FPT_STM.1 - Reliable time stamps</td>
				<td>
				  FAU_GEN.1.2 explicitly requires that the OS associate timestamps with audit records;
				  therefore it is duplicative to include a separate timestamp requirement.
				</td>
			</tr>
			<tr>
				<td>FTA_SSL.1 - TSF-initiated session locking</td>
				<td>
					  FMT_MOF_EXT.1 defines requirements for managing session locking;
					  therefore, it is duplicative to include a separate session locking requirement.
				</td>
			</tr>
			<tr>
				<td>FTA_SSL.2 - User-initiated locking</td>
				<td>
				  FMT_MOF_EXT.1 defines requirements for user-initiated session locking;
				  therefore, it is duplicative to include a separate session locking requirement.
				</td>
			</tr>
			<tr>
				<td>FAU_STG.1 - Protected audit trail storage</td>
				<td>
				  FPT_ACF_EXT.1 defines a requirement to protect audit logs;
				  therefore, it is duplicative to include a separate protection of audit trail requirements.
				</td>
			</tr>
			<tr>
				<td>FAU_GEN.2 - User identity association</td>
				<td>
				  FAU_GEN.1.2 explicitly requires that the OS record
				  any user account associated with each event; therefore, it is duplicative
				  to include a separate requirement to associate a user account with each
				  event.
				</td>
			</tr>
			<tr>
				<td>FAU_SAR.1 - Audit review</td>
				<td>
					FPT_ACF_EXT.1.2 requires that audit logs (and other objects)
					are protected from reading by unprivileged users; therefore, it is duplicative
					to include a separate requirement to protect only the audit information.
				</td>
			</tr>
		</table>

	</appendix>

	<!-- Entropy documentation -->
	<appendix title="Entropy Documentation and Assessment" id="entropyappendix"> 
		<h:p>
			This appendix describes the required supplementary information for the entropy
		  source used by the TOE.
			</h:p><h:p>
		  The documentation of the entropy source should be detailed enough that, after
		  reading, the evaluator will thoroughly understand the entropy source and why
		  it can be relied upon to provide sufficient entropy. This documentation should
		  include multiple detailed sections: design description, entropy justification,
		  operating conditions, and health testing. This documentation is not required to
		  be part of the TSS. 
		</h:p>
		<section id="entropydesign" title="Design Description">
			<h:p>
		  Documentation shall include the design of the entropy source as a whole,
		  including the interaction of all entropy source components. Any information
		  that can be shared regarding the design should also be included for any
		  third-party entropy sources that are included in the product. 
			</h:p><h:p>
		  The documentation will describe the operation of the entropy source to
		  include, how entropy is produced, and how unprocessed (raw) data can be
		  obtained from within the entropy source for testing purposes. The documentation
		  should walk through the entropy source design indicating where the entropy
		  comes from, where the entropy output is passed next, any post-processing
		  of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally,
		  how it is output from the entropy source. Any conditions placed on the
		  process (e.g., blocking) should also be described in the entropy source
		  design. Diagrams and examples are encouraged. 
			</h:p><h:p>
		  This design must also include a description of the content of the
		  security boundary of the entropy source and a description of how
		  the security boundary ensures that an adversary outside the boundary
		  cannot affect the entropy rate.
			</h:p><h:p>
		  If implemented, the design description shall include a description
		  of how third-party applications can add entropy to the RBG. A
		  description of any RBG state saving between power-off and
		  power-on shall be included.
			</h:p>
		</section>

		<section id="entropyjustification" title="Entropy Justification">
			<h:p>
		  There should be a technical argument for where the unpredictability in
		  the source comes from and why there is confidence in the entropy source
		  delivering sufficient entropy for the uses made of the RBG output
		  (by this particular TOE). This argument will include a description of
		  the expected min-entropy rate (i.e. the minimum entropy (in bits) per
		  bit or byte of source data) and explain that sufficient entropy is
		  going into the TOE randomizer seeding process. This discussion will
		  be part of a justification for why the entropy source can be relied
		  upon to produce bits with entropy.
			</h:p><h:p>
		  The amount of information necessary to justify the expected
		  min-entropy rate depends on the type of entropy source included in the
		  product.
			</h:p><h:p>
		  For developer provided entropy sources, in order to justify the
		  min-entropy rate, it is expected that a large number of raw source
		  bits will be collected, statistical tests will be performed, and the
		  min-entropy rate determined from the statistical tests. While no
		  particular statistical tests are required at this time, it is expected
		  that some testing is necessary in order to determine the amount of
		  min-entropy in each output.
			</h:p><h:p>
		  For third party provided entropy sources, in which the TOE vendor
		  has limited access to the design and raw entropy data of the source, the
		  documentation will indicate an estimate of the amount of min-entropy
		  obtained from this third-party source.  It is acceptable for the vendor
		  to “assume” an amount of min-entropy, however, this assumption must be
		  clearly stated in the documentation provided.  In particular, the
		  min-entropy estimate must be specified and the assumption included
		  in the ST.
			</h:p><h:p>
		  Regardless of type of entropy source, the justification will also
		  include how the DRBG is initialized with the entropy stated in the ST,
		  for example by verifying that the min-entropy rate is multiplied by the
		  amount of source data used to seed the DRBG or that the rate of entropy
		  expected based on the amount of source data is explicitly stated and
		  compared to the statistical rate. If the amount of source data used to
		  seed the DRBG is not clear or the calculated rate is not explicitly
		  related to the seed, the documentation will not be considered complete.
			</h:p><h:p>
		  The entropy justification shall not include any data added from
		  any third-party application or from any state saving between restarts.
			</h:p>
		</section>

		<section id="entropyoperatingconditions" title="Operating Conditions">
		  The entropy rate may be affected by conditions outside the control
		  of the entropy source itself.  For example, voltage, frequency,
		  temperature, and elapsed time after power-on are just a few of the
		  factors that may affect the operation of the entropy source.
		  As such, documentation will also include the range of operating conditions
		  under which the entropy source is expected to generate random data.
		  It will clearly describe the measures that have been taken in the
		  system design to ensure the entropy source continues to operate
		  under those conditions. Similarly, documentation shall describe
		  the conditions under which the entropy source is known to malfunction
		  or become inconsistent. Methods used to detect failure or degradation
		  of the source shall be included.
		</section>

		<section id="entropyhealthtesting" title="Health Testing">
		  More specifically, all entropy source health tests and their rationale
		  will be documented. This will include a description of the health tests,
		  the rate and conditions under which each health test is performed
		  (e.g., at startup, continuously, or on-demand), the expected results
		  for each health test, and rationale indicating why each test is
		  believed to be appropriate for detecting one or more failures in the
		  entropy source.
		</section>
  
	</appendix>

	<appendix id="apndx-equiv" title="Application Software Equivalency Guidelines">
		<section id="app-intro" title="Introduction">
			<h:p>
		  The purpose of equivalence in PP-based evaluations is to find a balance between evaluation rigor and commercial practicability—to 
		  ensure that evaluations meet customer expectations while recognizing that there is little to be gained from requiring that every 
		  variation in a product or platform be fully tested. If a product is found to be compliant with a PP on one platform, then all 
		  equivalent products on equivalent platforms are also considered to be compliant with the PP.
			</h:p><h:p>
		  A Vendor can make a claim of equivalence if the Vendor believes that a particular instance of their Product implements PP-specified 
		  security functionality in a way equivalent to the implementation of the same functionality on another instance of their Product on 
		  which the functionality was tested. The Product instances can differ in version number or feature level (model), or the instances may
		  run on different platforms. Equivalency can be used to reduce the testing required across claimed evaluated configurations. It can 
		  also be used during Assurance Maintenance to reduce testing needed to add more evaluated configurations to a certification.
			</h:p><h:p>
		  These equivalency guidelines do not replace Assurance Maintenance requirements or NIAP Policy #5 requirements for CAVP certificates. 
		  Nor may equivalency be used to leverage evaluations with expired certifications.
			</h:p><h:p>
		  These Equivalency Guidelines represent a shift from complete testing of all product instances to more of a risk-based approach. 
		  Rather than require that every combination of product and platform be tested, these guidelines support an approach that recognizes
		  that products are being used in a variety of environments—and often in cloud environments over where the vendor (and sometimes the 
		  customer) have little or no control over the underlying hardware. Developers should be responsible for the security functionality of 
		  their applications on the platforms they are developed for—whether that is an operating system, a virtual machine, or a software-based
		  execution environment such as a container. But those platforms may themselves run within other environments—virtual machines or
		  operating systems—that completely abstract away the underlying hardware from the application. The developer should not be held
		  accountable for security functionality that is implemented by platform layers that are abstracted away. The implication is that
		  not all security functionality will necessarily be tested for all platform layers down to the hardware for all evaluated
		  configurations—especially for applications developed for software-based execution environments such as containers. For these cases, 
		  the balancing of evaluation rigor and commercial practicability tips in favor of practicability. Note that this does not affect
		  the requirement that at least one product instance be fully tested on at least one platform with cryptography mapped to a CAVP 
		  certificate.
			</h:p><h:p>
		  Equivalency has two aspects:
			</h:p>
		  <h:ol>
			<h:li><h:b><h:i>Product Equivalence:</h:i></h:b> Products may be considered equivalent if there are no
			  differences between Product Models and Product Versions with respect to PP-specified security functionality.</h:li>
			<h:li><h:b><h:i>Platform Equivalence:</h:i></h:b> Platforms may be considered equivalent if there are no
			  significant differences in the services they provide to the Product—or in the way the platforms 
			  provide those services—with respect to PP-specified security functionality.</h:li>
		  </h:ol>
		  The equivalency determination is made in accordance with these guidelines by the Validator and Scheme using information provided by the Evaluator/Vendor.
		</section>
		<section id="approach" title="Approach to Equivalency Analysis">
			<h:p>
		  There are two scenarios for performing equivalency analysis. One is when a product has been certified and the vendor 
		  wants to show that a later product should be considered certified due to equivalence with the earlier product. The 
		  other is when multiple product variants are going though evaluation together and the vendor would like to reduce 
		  the amount of testing that must be done. The basic rules for determining equivalence are the same in both cases. 
		  But there is one additional consideration that applies to equivalence with previously certified products. That is, 
		  the product with which equivalence is being claimed must have a valid certification in accordance with scheme rules
		  and the Assurance Maintenance process must be followed. If a product’s certification has expired, then equivalence 
		  cannot be claimed with that product.
			</h:p><h:p>
		  When performing equivalency analysis, the Evaluator/Vendor should first use the factors and guidelines for Product
		  Model equivalence to determine the set of Product Models to be evaluated. In general, Product Models that do not differ 
		  in PP-specified security functionality are considered equivalent for purposes of evaluation against the AppPP.
			</h:p><h:p>
		  If multiple revision levels of Product Models are to be evaluated—or to determine whether a revision of an evaluated 
		  product needs re-evaluation—the Evaluator/Vendor and Validator should use the factors and guidelines for Product 
		  Version equivalence to analyze whether Product Versions are equivalent.
			</h:p><h:p>
		  Having determined the set of Product Models and Versions to be evaluated, the next step is to determine the set of
		  Platforms that the Products must be tested on.
			</h:p><h:p>
		  Each non-equivalent Product for which compliance is claimed must be fully tested on each non-equivalent platform 
		  for which compliance is claimed. For non-equivalent Products on equivalent platforms, only the differences that
		  affect PP-specified security functionality must be tested for each product.
			</h:p><h:p>
		  <h:b><h:i>“Differences in PP-Specified Security Functionality” Defined</h:i></h:b>
			</h:p><h:p>
		  If PP-specified security functionality is implemented by the TOE, then differences in the actual implementation
		  between versions or product models break equivalence for that feature. Likewise, if the TOE implements the 
		  functionality in one version or model and the functionality is implemented by the platform in another version 
		  or model, then equivalence is broken. If the functionality is implemented by the platform in multiple models or 
		  versions on equivalent platforms, then the functionality is considered different if the product invokes the platform 
		  differently to perform the function.
			</h:p>
		</section>
		<section id="modelequiv" title="Specific Guidance for Determining Product Model Equivalence">
		  <h:p>
		  Product Model equivalence attempts to determine whether different feature levels of the same product across 
		  a product line are equivalent for purposes of PP testing. For example, if a product has a “basic” edition and an “enterprise” 
		  edition, is it necessary to test both models? Or does testing one model provide sufficient assurance that both models 
		  are compliant?
		  </h:p><h:p>
		  Product models are considered equivalent if there are no differences that affect PP-specified security 
		  functionality—as indicated in Table 1.
		  </h:p><h:p>
		  
		  <h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
			  <h:td valign="top">Factor</h:td>
			  <h:td valign="top">Same/Different</h:td>
			  <h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr>
			  <h:td rowspan="2" valign="top">PP-Specified Functionality</h:td>
			  <h:td valign="top">Same</h:td>
			  <h:td valign="top">If the differences between Models affect only non-PP-specified functionality, then the Models are equivalent. </h:td>
			</h:tr>
			<h:tr>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">If PP-specified security functionality is affected by the differences between Models, 
				then the Models are not equivalent and must be tested separately. It is necessary only to test the functionality 
				affected by the software differences. If only differences are tested, then the differences must be enumerated, 
				and for each difference the Vendor must provide an explanation of why each difference does or does not affect 
				PP-specified functionality. If the Product Models are separately tested fully, then there is no need to document the differences. 
			  </h:td>
			</h:tr>
		  </h:table>
		  <h:b>Table 1. Determining Product Model Equivalence</h:b>
		  </h:p>
		</section>
		<section id="versionequiv" title="Specific Guidance for Determining Product Version Equivalence">
		  <h:p>
		  In cases of version equivalence, differences are expressed in terms of changes implemented in revisions 
		  of an evaluated Product. In general, versions are equivalent if the changes have no effect on any 
		  security-relevant claims about the TOE or assurance evidence. Non-security-relevant changes to TOE 
		  functionality or the addition of non-security-relevant functionality does not affect equivalence.
		  </h:p><h:p>
		  <h:table border="1">
			<h:tr class="header" bgcolor="#cccccc">
			  <h:td valign="top">Factor</h:td>
			  <h:td valign="top">Same/Different</h:td>
			  <h:td valign="top">Guidance</h:td>
			</h:tr>
			<h:tr valign="top">
			  <h:td valign="top">Product Models</h:td>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">Versions of different Product Models are not equivalent unless the Models are equivalent as defined in Section 3.</h:td>
			</h:tr>
			<h:tr>
			  <h:td rowspan="2" valign="top">PP-Specified Functionality</h:td>
			  <h:td valign="top">Same</h:td>
			  <h:td valign="top">If the differences affect only non-PP-specified functionality, then the Versions are equivalent. </h:td>
			</h:tr>
			<h:tr>
			  <h:td valign="top">Different</h:td>
			  <h:td valign="top">If PP-specified security functionality is affected by the differences, then the 
				Versions are not considered equivalent and must be tested separately. It is necessary only to test 
				the functionality affected by the changes. If only the differences are tested, then for each 
				difference the Vendor must provide an explanation of why the difference does or does not affect 
				PP-specified functionality. If the Product Versions are separately tested fully, then there is 
				no need to document the differences. </h:td>
			</h:tr>
		  </h:table>
		  <h:b>Table 2. Factors for Determining Product Version Equivalence</h:b>
		  </h:p>
		</section>
		<section id="platformequiv" title="Specific Guidance for Determining Platform Equivalence">
		  <h:p>
		  Platform equivalence is used to determine the platforms that equivalent versions of a Product must be tested on. 
		  Platform equivalence analysis done for one software application cannot be applied to another software application.
		  Platform equivalence is not general—it is with respect to a particular application. 
		  </h:p><h:p>
		  Product Equivalency analysis must already have been done and Products have been determined to be equivalent.
		  </h:p><h:p>
		  The platform can be hardware or virtual hardware, an operating system or similar entity, or a software execution 
		  environment such as a container. For purposes of determining equivalence for software applications, we address each
		  type of platform separately. In general, platform equivalence is based on differences in the interfaces between the 
		  TOE and Platform that are relevant to the implementation of PP-specified security functionality.
		  </h:p>
		  <section id="hardware-equiv" title="Platform Equivalence—Hardware/Virtual Hardware Platforms">
			<h:p>
				If an application runs directly on hardware without an operating system—or directly on virtualized 
			hardware without an operating system—then platform equivalence is based on processor architecture and 
			instruction sets. In the case of virtualized hardware, it is the virtualized processor and architecture 
			that are presented to the application that matters—not the physical hardware.
		  </h:p><h:p>
			Platforms with different processor architectures and instruction sets are not equivalent. This is not 
			likely to be an issue for equivalency analysis for applications since there is likely to be a different 
			version of the application for different hardware environments.
			Equivalency analysis becomes important when comparing processors with the same architecture. Processors 
			with the same architecture that have instruction sets that are subsets or supersets of each other are not
			disqualified from being equivalent for purposes of an App evaluation. If the application takes the same 
			code paths when executing PP-specified security functionality on different processors of the same family, 
			then the processors can be considered equivalent with respect to that application.
			For example, if an application follows one code path on platforms that support the AES-NI instruction 
			and another on platforms that do not, then those two platforms are not equivalent with respect to that 
			application functionality. But if the application follows the same code path whether or not the platform 
			supports AES-NI, then the platforms are equivalent with respect to that functionality.
		  </h:p><h:p>
			The platforms are equivalent with respect to the application if the platforms are equivalent with respect to all PP-specified
			security functionality.
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Architectures</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms that present different processor architectures and instruction sets to the application are not equivalent.</h:td>
			  </h:tr>
			  <h:tr>
				<h:td valign="top">PP-Specified Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">For platforms with the same processor architecture, the platforms are equivalent with
				  respect to the application if execution of all PP-specified security functionality follows the same code path on both platforms.</h:td>
			  </h:tr>
			</h:table>
			<h:b>Table 3. Factors for Determining Hardware/Virtual Hardware Platform Equivalence</h:b>
		  </h:p>
		  </section>
		  <section id="os-equiv" title="Platform Equivalence—OS Platforms">
			<h:p>
			For traditional applications that are built for and run on operating systems, platform equivalence is 
			determined by the interfaces between the application and the operating system that are relevant to PP-specified 
			security functionality. Generally, these are the processor interface, device interfaces, and OS APIs. The following 
			factors applied in order:
			
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Architectures</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms that run on different processor architectures and instruction sets are not equivalent.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Vendors</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from different vendors are not equivalent. </h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Versions</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from the same vendor with different major version numbers are not equivalent.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Interfaces</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Platforms from the same vendor and major version are not equivalent if there are
				  differences in device interfaces and OS APIs that are relevant to the way the platform provides PP-specified 
				  security functionality to the application. </h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Interfaces</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">Platforms from the same vendor and major version are equivalent if there are 
				  no differences in device interfaces and OS APIs that are relevant to the way the platform 
				  provides PP-specified security functionality to the application, or if the Platform does 
				  not provide such functionality to the application.</h:td>
			  </h:tr>
			  
			</h:table>
			<h:b>Table 4. Factors for Determining OS/VS Platform Equivalence</h:b>
			</h:p>
		
		  </section>
		  <section id="software-equiv" title="Software-based Execution Environment Platform Equivalence">
			<h:p>
			If an Application is built for and runs in a non-OS software-based execution environment, such as a Container or 
			Java Runtime, then the below criteria must be used to determine platform equivalence. The key point is that the 
			underlying hardware (virtual or physical) and OS is not relevant to platform equivalence. This allows applications 
			to be tested and run on software-based execution environments on any hardware—as in cloud deployments.
			
			<h:table border="1">
			  <h:tr class="header" bgcolor="#cccccc">
				<h:td valign="top">Factor</h:td>
				<h:td valign="top">Same/Different/None</h:td>
				<h:td valign="top">Guidance</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Type/Vendor</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Software-based execution environments that are substantially different or come 
				  from different vendors are not equivalent. For example, a Java virtual machine is not the same as a 
				  container. A Docker container is not the same as a CoreOS container.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">Platform Versions</h:td>
				<h:td valign="top">Different</h:td>
				<h:td valign="top">Execution environments that are otherwise equivalent are not equivalent if they have 
				  different major version numbers.</h:td>
			  </h:tr>
			  <h:tr valign="top">
				<h:td valign="top">PP-Specified Security Functionality</h:td>
				<h:td valign="top">Same</h:td>
				<h:td valign="top">All other things being equal, execution environments are equivalent if there is no 
				  significant difference in the interfaces through which the environments provide PP-specified security 
				  functionality to applications.</h:td>
			  </h:tr>
			</h:table>
			<h:b>Table 5. Factors for Software-based Execution Environment Platform Equivalence</h:b>
			</h:p>
		  </section>
		</section>
		<section id="specificity" title="Level of Specificity for Tested Configurations and Claimed Equivalent Configurations">
			<h:p>
		  In order to make equivalency determinations, the vendor and evaluator must agree on the equivalency claims. They must 
		  then provide the scheme with sufficient information about the TOE instances and platforms that were evaluated, and the 
		  TOE instances and platforms that are claimed to be equivalent.
			</h:p><h:p>
		  The ST must describe all configurations evaluated down to processor manufacturer, model number, and microarchitecture version. 
			</h:p><h:p>
		  The information regarding claimed equivalent configurations depends on the platform that the application was developed for and runs on.
			</h:p><h:p>
		  <h:b>Bare-Metal Applications</h:b>
			</h:p><h:p>
		  For applications that run without an operating system on bare-metal or virtual bare-metal, the claimed configuration must 
		  describe the platform down to the specific processor manufacturer, model number, and microarchitecture version. The Vendor
		  must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE functions
		  differently to leverage platform differences (e.g., instruction set extensions) in the tested configuration versus the 
		  claimed equivalent configuration. 
			</h:p><h:p>
		  <h:b>Traditional Applications</h:b>
			</h:p><h:p>
		  For applications that run with an operating system as their immediate platform, the claimed configuration must describe 
		  the platform down to the specific operating system version. If the platform is a virtualization system, then the claimed 
		  configuration must describe the platform down to the specific virtualization system version. The Vendor must describe the 
		  differences in the TOE with respect to PP-specified security functionality and how the TOE functions differently to leverage
		  platform differences in the tested configuration versus the claimed equivalent configuration. Relevant platform differences 
		  could include instruction sets, device interfaces, and OS APIs invoked by the TOE to implement PP-specified security 
		  functionality.
			</h:p><h:p>
		  <h:b>Software-Based Execution Environments</h:b>
			</h:p><h:p>
		  For applications that run in a software-based execution environment such as a Java virtual machine or a Container, then 
		  the claimed configuration must describe the platform down to the specific version of the software execution environment. 
		  The Vendor must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE 
		  functions differently to leverage platform differences in the tested configuration versus the claimed equivalent 
		  configuration.
			</h:p>
		</section>
	</appendix>

	<!-- Abbreviations appendix is auto generated here -->
	
	<!-- Bibliography is auto generated here with CC and CEM docs. If you want other docs -->
	<!-- included, add them here. -->
	<bibliography>
      <entry id="bibCESG">
        <tag>CESG</tag>
        <description>CESG - <h:a href="https://www.gov.uk/government/collections/end-user-devices-security-guidance"> End
            User Devices Security and Configuration Guidance</h:a></description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act
            of 1987</h:a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf">Reporting Incidents Involving Personally Identifiable Information and Incorporating the
            Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July
          12, 2006. </description>
      </entry>
	</bibliography>

</Module>
